# .bashrc

#
# Default .bashrc see: /etc/skel/.bashrc
# 

# Source global definitions
if [ -f /etc/bashrc ]; then
  . /etc/bashrc
fi

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
  PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

#
# Aliases
#
export CLICOLOR=1
alias ls="ls -Gh"
alias ll='ls -ltra'
alias cc='clear;echo -n "Hi, "; whoami; echo " "'
alias ccc="clear;tree -d -L 4 --filelimit 4"
alias tx='tmux new -s tony'
# ckad
alias k=kubectl
alias ns='kubectl config set-context --current --namespace'
alias ctx='kubectl config use-context'
# gitlab roots
alias cdrs='cd ~/gitlab-rs-glu/rs'
alias cdnote="cd ~/gitlab-rs-glu/tony.gilkerson/notebook"

#
# Prompt
#
# d - the date in "Weekday Month Date" format (e.g., "Tue May 26")
# e - an ASCII escape character (033)
# h - the hostname up to the first .
# H - the full hostname
# j - the number of jobs currently run in background
# l - the basename of the shells terminal device name
# n - newline
# r - carriage return
# s - the name of the shell, the basename of $0 (the portion following the final slash)
# t - the current time in 24-hour HH:MM:SS format
# T - the current time in 12-hour HH:MM:SS format
# @ - the current time in 12-hour am/pm format
# A - the current time in 24-hour HH:MM format
# u - the username of the current user
# v - the version of bash (e.g., 4.00)
# V - the release of bash, version + patch level (e.g., 4.00.0)
# w - Complete path of current working directory
# W - the basename of the current working directory
# ! - the history number of this command
# # - the command number of this command
# $ - if the effective UID is 0, a #, otherwise a $
# nnn - the character corresponding to the octal number nnn
# \ - a backslash
# [ - begin a sequence of non-printing characters, which could be used to embed a terminal control sequence into the prompt
# ] - end a sequence of non-printing characters

get_host() {
    green="\[\033[0;32m\]"
    escape="\[\033[0m\]"
    host="udev"
    echo -e "${green}${host}: ${escape}"
}

get_venv() {
    green="\[\033[0;32m\]"
    escape="\[\033[0m\]"
    if [[ -n "${VIRTUAL_ENV##*/}" ]]; then 
      echo -e "${green}(${VIRTUAL_ENV##*/})${escape}" 
    fi
}

parse_git_branch() {
    branch=$(git branch 2> /dev/null | grep "*" | sed -e '/^\* /s/^\* //')
    if [ ! "${branch}" == "" ]; then
      red="\[\033[0;31m\]"
      escape="\[\033[0m\]"
      echo -e "${red}(${branch})${escape}"
    fi
}
# export PS1='$(get_host)\w $(parse_git_branch)\$ '
PROMPT_COMMAND='PS1="$(get_host)\w $(get_venv)$(parse_git_branch)\n\$ "' 

#
# GO - Update the path 
#

# Add Go binaries to PATH
if [ -d "$HOME/go/bin" ]; then
  PATH="$HOME/go/bin:$PATH"
fi

#
# BREW - Export env vars and add brew to the path
#
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

#
# GPG - avoid "failed to write commit object" when committing
#
export GPG_TTY=$(tty)

#
# point to InfoList data file
#
export INFOLIST_DATA=/home/tgilkerson/gitlab-rs-glu/tony.gilkerson/notebook/infolist/infolist-data-rs.yaml

#
# Needed to point dagger cli at engine running in the cluster
# ref: https://docs.dagger.io/configuration/custom-runner
#
DAGGER_ENGINE_POD=$(kubectl get pods -l name=dagger-dagger-helm-engine -o custom-columns=":metadata.name"  --no-headers)
export _EXPERIMENTAL_DAGGER_RUNNER_HOST="kube-pod://${DAGGER_ENGINE_POD}?namespace=dagger&container=dagger-engine"
